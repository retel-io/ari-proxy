akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  log-dead-letters-during-shutdown = false
  coordinated-shutdown {
    phases {
      actor-system-terminate {
        timeout = 2s
        depends-on = [before-actor-system-terminate]
      }
    }
  }
  http {
    client {
      user-agent-header = ari-proxy
      idle-timeout = 60s # the default

      websocket {
        periodic-keep-alive-mode = ping
        periodic-keep-alive-max-idle = 10s
      }
    }
  }
}

service {
  name = "ari-proxy"
  websocket-uri = "ws://"${service.asterisk.server}"/ari/events?app="${service.stasis-app}"&api_key="${service.asterisk.user}":"${service.asterisk.password}

  rest {
    user = ${service.asterisk.user}
    password = ${service.asterisk.password}
    uri = "http://"${service.asterisk.server}"/ari"
  }

  kafka {
    auto-offset-reset = "earliest"
  }
}
